{"version":3,"sources":["components/Form.js","components/Todo.js","components/App.js","index.js"],"names":["Form","props","handleChange","e","setState","input","currentTarget","value","handleSubmit","preventDefault","onSubmit0","state","onSubmit","this","type","onChange","React","Component","Todo","handleChangeCompleted","id","completed","text","checked","currentId","App","newTodo","newTodos","todos","map","todo","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,E,kDAhCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,cAAcC,SAtBtB,EAyBnBC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKR,MAAMS,UAAU,EAAKC,MAAMN,OAChC,EAAKD,SAAS,CAAEC,MAAO,MAzBvB,EAAKM,MAAQ,CACXN,MAAO,IAJQ,E,0CAQnB,WACE,OACE,uBAAMO,SAAUC,KAAKL,aAArB,UACE,uBACEM,KAAK,OACLP,MAAOM,KAAKF,MAAMN,MAClBU,SAAUF,KAAKX,eAEjB,yD,GAjBWc,IAAMC,WCAnBC,E,4MAoBJC,sBAAwB,WACtB,MAAoC,EAAKlB,OACzCc,EADA,EAAQA,UAAR,EAAkBK,IAAlB,EAAsBC,Y,4CApBxB,WACE,MAA4BR,KAAKZ,MAAzBqB,EAAR,EAAQA,KAAMD,EAAd,EAAcA,UAEd,OACE,gCACE,kCACE,uBACEP,KAAK,WACLS,QAASF,EACTN,SAAUF,KAAKM,wBAEhBG,KAEH,kDACA,yD,GAfWN,IAAMC,WA0BVC,ICxBXM,EAAY,EAsEDC,E,kDAnEb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAwCRO,aAAe,SAACc,GACd,IAAMI,EAAU,CACdN,GAAII,EACJF,OACAD,WAAW,GAEPM,EAAQ,sBAAO,EAAKhB,MAAMiB,OAAlB,CAAyBF,IACvC,EAAKtB,SAAS,CAAEwB,MAAOD,IACvBH,KAjDiB,EAoDnBL,sBAAwB,SAACC,EAAIC,GAC3B,IAAMM,EAAW,EAAKhB,MAAMiB,MAAMC,KAAI,SAACC,GACrC,OAAIA,EAAKV,KAAOA,EACP,2BACFU,GADL,IAEET,cAIGS,KAET,EAAK1B,SAAS,CAAEwB,MAAOD,KA5DvB,EAAKhB,MAAQ,CACXiB,MAAO,IAJQ,E,0CAOnB,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAMlB,UAAWG,KAAKL,eAEtB,kCACE,uBAAOM,KAAK,aADd,gDAKA,mCACE,kDACA,wDACA,2DAGF,6BACGD,KAAKF,MAAMiB,MAAMC,KAAI,gBAAGT,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMD,EAAb,EAAaA,UAAb,OACpB,6BACE,cAAC,EAAD,CACED,GAAIA,EACJE,KAAMA,EACND,UAAWA,EACXN,SAAU,EAAKI,yBALVC,QAWb,6F,GArCUJ,IAAMC,WCFxBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6c392682.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.input}\n          onChange={this.handleChange}\n        />\n        <button>追加</button>\n      </form>\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({ input: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit0(this.state.input);\n    this.setState({ input: \"\" });\n  };\n}\n\nexport default Form;\n","import React from \"react\";\n\nclass Todo extends React.Component {\n  render() {\n    const { text, completed } = this.props;\n\n    return (\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={completed}\n            onChange={this.handleChangeCompleted}\n          />\n          {text}\n        </label>\n        <button>編集</button>\n        <button>削除</button>\n      </div>\n    );\n  }\n\n  handleChangeCompleted = () => {\n    const { onChange, id, completed } = this.props;\n    onChange(id, !completed);\n  };\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Todo from \"./Todo\";\n\nlet currentId = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Form onSubmit0={this.handleSubmit} />\n\n        <label>\n          <input type=\"checkbox\" />\n          全て完了にする\n        </label>\n\n        <select>\n          <option>全て</option>\n          <option>未完了</option>\n          <option>完了済</option>\n        </select>\n\n        <ul>\n          {this.state.todos.map(({ id, text, completed }) => (\n            <li key={id}>\n              <Todo\n                id={id}\n                text={text}\n                completed={completed}\n                onChange={this.handleChangeCompleted}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button>完了済を全て削除</button>\n      </div>\n    );\n  }\n\n  handleSubmit = (text) => {\n    const newTodo = {\n      id: currentId,\n      text,\n      completed: false,\n    };\n    const newTodos = [...this.state.todos, newTodo];\n    this.setState({ todos: newTodos });\n    currentId++;\n  };\n\n  handleChangeCompleted = (id, completed) => {\n    const newTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed,\n        };\n      }\n\n      return todo;\n    });\n    this.setState({ todos: newTodos });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}