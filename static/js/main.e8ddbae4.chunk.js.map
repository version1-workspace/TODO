{"version":3,"sources":["create.js","taskitem.js","tasklist.js","main.js","App.js","reportWebVitals.js","index.js"],"names":["Create","props","state","newtaskval","textChange","bind","textSubmit","event","this","setState","target","value","preventDefault","newtask","length","window","confirm","sendTaskVal","onSubmit","type","onChange","Component","TaskItem","taskid","item","id","taskname","name","onClick","remove1","TaskList","taskdata","taskData","map","i","remove2","Main","taskset","max_id","submitClick","removeClick","maxId","taskSet","push","beforeState","removeId","Number","currentTarget","getAttribute","newState","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAsCeA,E,kDAnCd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,WAAY,IAE3B,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBALD,E,8CAQlB,SAAWE,GACVC,KAAKC,SAAU,CAAEN,WAAYI,EAAMG,OAAOC,U,wBAG3C,SAAWJ,GACVA,EAAMK,iBAEN,IAAMC,EAAUL,KAAKN,MAAMC,WAC3B,GAAgB,KAAZU,GAAkBA,EAAQC,OAAS,EACtC,OAAO,EAEQ,KAAZD,GAAkBE,OAAOC,QAAQ,qFACpCR,KAAKP,MAAMgB,YAAYJ,GACvBL,KAAKC,SAAU,CAAEN,WAAY,Q,oBAI/B,WACC,OACC,uBAAMe,SAAUV,KAAKF,WAArB,UACC,uBAAOa,KAAK,OAAOR,MAAOH,KAAKN,MAAMC,WAAYiB,SAAUZ,KAAKJ,aAChE,yD,GA9BiBiB,aCAfC,E,4JACL,WAEC,IAAMC,EAASf,KAAKP,MAAMuB,KAAKC,GACzBC,EAAWlB,KAAKP,MAAMuB,KAAKG,KAEjC,OACC,+BACED,EACD,wBAAQ,UAASH,EAAQK,QAASpB,KAAKP,MAAM4B,QAA7C,sBAFQN,O,GAPWF,aAiBRC,IChBTQ,E,4JACL,WAAU,IAAD,OAEFC,EAAWvB,KAAKP,MAAM+B,SAE5B,OAAwB,IAApBD,EAASjB,OAEX,6CAKA,6BACEiB,EAASE,KAAK,SAAAC,GAAC,OACf,cAAC,EAAD,CAAqBV,KAAMU,EAAGL,QAAS,EAAK5B,MAAMkC,SAAnCD,EAAET,a,GAdAJ,aAuBRS,ICqBAM,E,kDA1Cd,WAAYnC,GAAO,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACZmC,QAAS,GACTC,OAAQ,GAET,EAAKC,YAAc,EAAKA,YAAYlC,KAAjB,gBACnB,EAAKmC,YAAc,EAAKA,YAAYnC,KAAjB,gBARF,E,+CAWlB,SAAYM,GACX,IAAM8B,EAAQjC,KAAKN,MAAMoC,OACnBI,EAAUlC,KAAKN,MAAMmC,QAC3BK,EAAQC,KAAM,CAAElB,GAAIgB,EAAM,EAAGd,KAAMhB,IAEnCH,KAAKC,SAAS,CACb4B,QAASK,EACTJ,OAAQG,EAAM,M,yBAIhB,SAAYlC,GACX,IAAMqC,EAAcpC,KAAKN,MAAMmC,QACzBQ,EAAWC,OAAQvC,EAAMwC,cAAcC,aAAa,YACpDC,EAAWL,EAAYM,QAAQ,SAAAhB,GAAC,OAAIA,EAAET,KAAOoB,KAEnDrC,KAAKC,SAAS,CACb4B,QAASY,M,oBAIX,WACC,OACC,gCACC,cAAC,EAAD,CAAQhC,YAAaT,KAAK+B,cAC1B,cAAC,EAAD,CAAUP,SAAUxB,KAAKN,MAAMmC,QAASF,QAAS3B,KAAKgC,qB,GArCvCnB,aCMJ8B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e8ddbae4.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Create extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = { newtaskval: '' };\n\t\t\n\t\tthis.textChange = this.textChange.bind(this);\n\t\tthis.textSubmit = this.textSubmit.bind(this);\n\t}\n\t\n\ttextChange(event){\n\t\tthis.setState( { newtaskval: event.target.value } );\n\t}\n\t\n\ttextSubmit(event){\n\t\tevent.preventDefault();\n\t\t\n\t\tconst newtask = this.state.newtaskval;\n\t\tif( newtask === '' || newtask.length < 3 ){\n\t\t\treturn(false);\n\t\t}\n\t\tif( newtask !== '' && window.confirm('新しいタスクを登録しますか?') ){\n\t\t\tthis.props.sendTaskVal(newtask);\n\t\t\tthis.setState( { newtaskval: '' } );\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn(\n\t\t\t<form onSubmit={this.textSubmit}>\n\t\t\t\t<input type=\"text\" value={this.state.newtaskval} onChange={this.textChange} />\n\t\t\t\t<button>追加</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Create;","import React, {Component} from 'react';\n\nclass TaskItem extends Component {\n\trender() {\n\t\t\n\t\tconst taskid = this.props.item.id;\n\t\tconst taskname = this.props.item.name;\n\t\t\n\t\treturn(\n\t\t\t<li key={taskid}>\n\t\t\t\t{taskname}\n\t\t\t\t<button data-id={taskid} onClick={this.props.remove1}>\n\t\t\t\t&#10005;</button>\n\t\t\t</li>\n\t\t);\n\t\t\t\n\t}\n}\n\nexport default TaskItem;","import React, {Component} from 'react';\nimport TaskItem from './taskitem';\n\nclass TaskList extends Component {\n\trender() {\n\t\t\n\t\tconst taskdata = this.props.taskData;\n\t\t\n\t\tif( taskdata.length === 0 ){\n\t\t\treturn(\n\t\t\t\t<p>なし</p>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn(\n\t\t\t\t<ul>\n\t\t\t\t\t{taskdata.map( i =>\n\t\t\t\t\t\t<TaskItem key={i.id} item={i} remove1={this.props.remove2} />\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t);\n\t\t}\n\t\t\t\n\t}\n}\n\nexport default TaskList;","import React, {Component} from 'react';\nimport Create from './create';\nimport TaskList from './tasklist';\n\nclass Main extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\ttaskset: [],\n\t\t\tmax_id: 0\n\t\t};\n\t\tthis.submitClick = this.submitClick.bind(this);\n\t\tthis.removeClick = this.removeClick.bind(this);\n\t}\n\n\tsubmitClick(value){\n\t\tconst maxId = this.state.max_id;\n\t\tconst taskSet = this.state.taskset;\n\t\ttaskSet.push( { id: maxId+1, name: value } );\n\t\t\n\t\tthis.setState({\n\t\t\ttaskset: taskSet,\n\t\t\tmax_id: maxId+1\n\t\t});\n\t}\n\n\tremoveClick(event){\n\t\tconst beforeState = this.state.taskset;\n\t\tconst removeId = Number( event.currentTarget.getAttribute('data-id') );\n\t\tconst newState = beforeState.filter( i => i.id !== removeId );\n\t\t\n\t\tthis.setState({\n\t\t\ttaskset: newState\n\t\t});\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Create sendTaskVal={this.submitClick} />\n\t\t\t\t<TaskList taskData={this.state.taskset} remove2={this.removeClick} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;","import Main from './main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}