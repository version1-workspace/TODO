{"version":3,"sources":["create.js","taskitem.js","tasklist.js","main.js","App.js","reportWebVitals.js","index.js"],"names":["Create","props","date","Date","str","getFullYear","getMonth","slice","getDate","state","newtaskval","limitdate","dateChange","bind","textChange","textSubmit","event","this","setState","target","value","preventDefault","newtask","length","window","confirm","onSubmit","edit","Object","keys","console","log","type","onChange","Component","TaskItem","taskid","item","id","tasklimit","limit","taskname","name","onClick","remove1","TaskList","taskdata","taskData","map","i","remove2","Main","taskset","max_id","editset","submitClick","removeClick","editClick","maxId","taskSet","push","beforeState","removeId","Number","currentTarget","getAttribute","newState","filter","targetState","editId","editState","find","task","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbfa1fd1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    const date = new Date();\n    const str =\n      date.getFullYear() +\n      \"/\" +\n      (\"0\" + (date.getMonth() + 1)).slice(-2) +\n      \"/\" +\n      (\"0\" + date.getDate()).slice(-2);\n\n    this.state = {\n      newtaskval: \"\",\n      limitdate: str,\n    };\n\n    this.dateChange = this.dateChange.bind(this);\n    this.textChange = this.textChange.bind(this);\n    this.textSubmit = this.textSubmit.bind(this);\n  }\n\n  dateChange(event) {\n    this.setState({ limitdate: event.target.value });\n  }\n\n  textChange(event) {\n    this.setState({ newtaskval: event.target.value });\n  }\n\n  textSubmit(event) {\n    event.preventDefault();\n\n    const newtask = this.state.newtaskval;\n    const limitdate = this.state.limitdate;\n    if (newtask === \"\" || newtask.length < 3) {\n      return false;\n    }\n    if (newtask !== \"\" && window.confirm(\"新しいタスクを登録しますか?\")) {\n      this.props.onSubmit(newtask, limitdate);\n      this.setState({ newtaskval: \"\" });\n    }\n  }\n\n  render() {\n    const edit = this.props.edit;\n    if (Object.keys(edit).length) {\n      console.log(edit);\n    }\n\n    return (\n      <form onSubmit={this.textSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.limitdate}\n          onChange={this.dateChange}\n        />\n        <input\n          type=\"text\"\n          value={this.state.newtaskval}\n          onChange={this.textChange}\n        />\n        <button>追加</button>\n      </form>\n    );\n  }\n}\n\nexport default Create;\n","import React, { Component } from \"react\";\n\nclass TaskItem extends Component {\n  render() {\n    const taskid = this.props.item.id;\n    const tasklimit = this.props.item.limit;\n    const taskname = this.props.item.name;\n\n    return (\n      <li key={taskid}>\n        {taskname}（{tasklimit}まで）\n        <button data-id={taskid} onClick={this.props.remove1}>\n          &#10005;\n        </button>\n        <button data-id={taskid} onClick={this.props.edit}>\n          編集\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default TaskItem;\n","import React, { Component } from \"react\";\nimport TaskItem from \"./taskitem\";\n\nclass TaskList extends Component {\n  render() {\n    const taskdata = this.props.taskData;\n\n    if (taskdata.length === 0) {\n      return <p>なし</p>;\n    } else {\n      return (\n        <ul>\n          {taskdata.map((i) => (\n            <TaskItem\n              key={i.id}\n              item={i}\n              remove1={this.props.remove2}\n              edit={this.props.edit}\n            />\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport Create from \"./create\";\nimport TaskList from \"./tasklist\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskset: [],\n      max_id: 0,\n      editset: [],\n    };\n    this.submitClick = this.submitClick.bind(this);\n    this.removeClick = this.removeClick.bind(this);\n    this.editClick = this.editClick.bind(this);\n  }\n\n  submitClick(value, date) {\n    const maxId = this.state.max_id;\n    const taskSet = this.state.taskset;\n    taskSet.push({ id: maxId + 1, name: value, limit: date });\n\n    this.setState({\n      taskset: taskSet,\n      max_id: maxId + 1,\n    });\n  }\n\n  removeClick(event) {\n    const beforeState = this.state.taskset;\n    const removeId = Number(event.currentTarget.getAttribute(\"data-id\"));\n    const newState = beforeState.filter((i) => i.id !== removeId);\n\n    this.setState({\n      taskset: newState,\n    });\n  }\n\n  editClick(event) {\n    const targetState = this.state.taskset;\n    const editId = Number(event.currentTarget.getAttribute(\"data-id\"));\n    const editState = targetState.find((task) => {\n      return task.id === editId;\n    });\n\n    this.setState({\n      editset: editState,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Create onSubmit={this.submitClick} edit={this.state.editset} />\n        <TaskList\n          taskData={this.state.taskset}\n          remove2={this.removeClick}\n          edit={this.editClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import Main from './main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}